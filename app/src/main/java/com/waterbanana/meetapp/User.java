package com.waterbanana.meetapp;


import android.util.Log;

import java.util.ArrayList;

/**
 * Created by Eddie on 6/18/2015.
 */
public class User {
    private String UID;
    private ArrayList<Ribbon> timeslots;
    private ArrayList<Integer> groups;
    private DbHandler db = new DbHandler();

    /************** Constructors ****************/
    public User( String userid ){
        UID = userid;
        timeslots = new ArrayList<>();
        groups = new ArrayList<>();
    }

    public User( String userid, ArrayList<Ribbon> timeslots ){
        UID = userid;
        this.timeslots = new ArrayList<>();
        this.timeslots = timeslots;
        groups = new ArrayList<>();
    }
    /******************************************/

    /**
     * For each new ribbon (timeslot).
     * @param ribbon
     * @return Ribbon ID generated by database. -1 upon failure.
     */
    public int newRibbon( Ribbon ribbon ){
        int ribbonID = -1;
        try{
            ribbonID = db.insertTimeslot( this.UID, ribbon );
            timeslots.add( ribbon );
        } catch( DbHandler.DBException e ){
            Log.e( "User.class", "newRibbon(): " + e.toString() );
        }

        return ribbonID;
    }

    public ArrayList<Ribbon> getRibbons(){
        return timeslots;
    }

    public String getID(){
        return UID;
    }

    /**
     * Populates the user's array list of group IDs from database.
     */
    public void populateGroupList(){
        int[] aGroupsList = db.getGroupsByUserId( this.UID );
        for( int i = 0; i < aGroupsList.length; i++ ){
            groups.add( aGroupsList[i] );
        }
    }

    public ArrayList<Integer> getGroups(){
        return groups;
    }

    public void addToGroup(int groupid){
        db.insertToGroupsTable( this.UID, groupid );
        groups.add( groupid );
    }

    public void removeFromGroup( int groupid ){
        try{
            db.removeFromGroupsTable( this.UID, groupid );
            groups.remove( new Integer( groupid ) );
        } catch( DbHandler.DBException e ){
            Log.e( "User.class", "removeFromGroup()" + e.toString() );
        }

    }

    public int getRibbonIDwithDateStartEnd(String date, int start, int end){
        int ribbonID = -1;

        for(int i=0; i<timeslots.size(); i++){
            if(timeslots.get(i).getDate().equals(date)){
                if(timeslots.get(i).getStart() == start){
                    if(timeslots.get(i).getEnd() == end){
                        ribbonID = timeslots.get(i).getId();
                    }
                }
            }
        }

        return ribbonID;
    }

    /**
     * For testing purposes only.
     * Deprecated: Use {@link #newRibbon(Ribbon)} instead.
     */
    @Deprecated
    public int addTimeSlot( Ribbon ribbon ){
        timeslots.add(ribbon);
        return timeslots.size();
    }

    /**
     * For testing purposes only.
     * Deprecated: User {@link #addToGroup(int)} instead.
     */
    @Deprecated
    public void addToGroupList(int groupid){
        groups.add( groupid );
    }


}
